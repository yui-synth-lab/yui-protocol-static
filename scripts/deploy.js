import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üöÄ Starting deployment to gh-pages...');

try {
  // 1. ÈùôÁöÑ„Éá„Éº„Çø„Çí„Éì„É´„Éâ
  console.log('üì¶ Building static data...');
  execSync('node scripts/build-static-data.js', { stdio: 'inherit' });

  // 2. Vite„Åß„Éì„É´„Éâ
  console.log('üî® Building with Vite...');
  execSync('vite build --config vite.config.static.ts', { stdio: 'inherit' });

  // 3. ÁèæÂú®„ÅÆ„Éñ„É©„É≥„ÉÅ„ÇíÁ¢∫Ë™ç
  const currentBranch = execSync('git branch --show-current', { encoding: 'utf8' }).trim();
  console.log(`üìç Current branch: ${currentBranch}`);

  // 4. gh-pages„Éñ„É©„É≥„ÉÅ„ÅåÂ≠òÂú®„Åô„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
  const branches = execSync('git branch -a', { encoding: 'utf8' });
  const hasGhPages = branches.includes('gh-pages');

  if (!hasGhPages) {
    console.log('üåø Creating gh-pages branch...');
    execSync('git checkout -b gh-pages', { stdio: 'inherit' });
  } else {
    console.log('üåø Switching to gh-pages branch...');
    execSync('git checkout gh-pages', { stdio: 'inherit' });
  }

  // 5. Êó¢Â≠ò„ÅÆ„Éï„Ç°„Ç§„É´„ÇíÂâäÈô§Ôºà.git, node_modules, dist-static, sessions, .„ÅßÂßã„Åæ„Çã„Éï„Ç°„Ç§„É´/„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅØÈô§Â§ñÔºâ
  console.log('üßπ Cleaning gh-pages branch...');
  const files = fs.readdirSync('.');
  for (const file of files) {
    if (file === '.git' || file === 'node_modules' || file === 'dist-static' || file === 'sessions' || file.startsWith('.')) continue;
    if (fs.statSync(file).isDirectory()) {
      fs.rmSync(file, { recursive: true, force: true });
    } else {
      fs.unlinkSync(file);
    }
  }

  // 6. dist-static„ÅÆÂÜÖÂÆπ„Çí„Ç≥„Éî„Éº
  console.log('üìã Copying built files...');
  const distStaticPath = './dist-static';
  if (fs.existsSync(distStaticPath)) {
    const distFiles = fs.readdirSync(distStaticPath);
    for (const file of distFiles) {
      const srcPath = path.join(distStaticPath, file);
      const destPath = path.join('.', file);
      if (fs.statSync(srcPath).isDirectory()) {
        fs.cpSync(srcPath, destPath, { recursive: true });
      } else {
        fs.copyFileSync(srcPath, destPath);
      }
    }
  }

  // 7. outputs„Éï„Ç©„É´„ÉÄ„Çí„Ç≥„Éî„Éº
  console.log('üìÅ Copying outputs folder...');
  const outputsPath = './outputs';
  if (fs.existsSync(outputsPath)) {
    fs.cpSync(outputsPath, './outputs', { recursive: true });
  }

  // 8. Â§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà
  console.log('üíæ Committing changes...');
  execSync('git add .', { stdio: 'inherit' });
  execSync('git commit -m "Deploy static site to GitHub Pages"', { stdio: 'inherit' });

  // 9. gh-pages„Éñ„É©„É≥„ÉÅ„Çí„Éó„ÉÉ„Ç∑„É•ÔºàËá™Âãïpush„ÅØ„Åó„Å™„ÅÑÔºâ
  console.log('üö¶ Push is skipped. Please review and push manually: git push origin gh-pages');

  // 10. ÂÖÉ„ÅÆ„Éñ„É©„É≥„ÉÅ„Å´Êàª„Çã
  console.log(`üîÑ Switching back to ${currentBranch}...`);
  execSync(`git checkout ${currentBranch}`, { stdio: 'inherit' });

  console.log('‚úÖ Deployment completed (push skipped).');
  console.log('üåê Your site will be available at: https://[your-username].github.io/yui-protocol-static/');
  console.log('üìù Don\'t forget to configure GitHub Pages in your repository settings:');
  console.log('   Settings > Pages > Source: Deploy from a branch > Branch: gh-pages > Folder: / (root)');

} catch (error) {
  console.error('‚ùå Deployment failed:', error.message);
  process.exit(1);
} 